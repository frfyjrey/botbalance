# Generated by Django 5.2.5 on 2025-09-06 03:17

from decimal import Decimal

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("exchanges", "0003_add_passphrase_field"),
    ]

    operations = [
        migrations.CreateModel(
            name="PortfolioState",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "ts",
                    models.DateTimeField(
                        help_text="Время последнего расчета (UTC, ISO-8601 с Z)"
                    ),
                ),
                (
                    "quote_asset",
                    models.CharField(
                        help_text="Базовая валюта стратегии (USDT, USDC, BTC)",
                        max_length=10,
                    ),
                ),
                (
                    "nav_quote",
                    models.DecimalField(
                        decimal_places=8,
                        help_text="Total Net Asset Value in quote currency",
                        max_digits=20,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0"))
                        ],
                    ),
                ),
                (
                    "positions",
                    models.JSONField(
                        help_text='Asset positions from strategy {"BTCUSDT": {"amount": "0.12", "quote_value": "7234.50"}}'
                    ),
                ),
                (
                    "prices",
                    models.JSONField(
                        help_text='Market prices for strategy assets {"BTCUSDT": "60287.1"}'
                    ),
                ),
                (
                    "source",
                    models.CharField(
                        choices=[
                            ("tick", "Автообновление"),
                            ("manual", "Ручное обновление"),
                        ],
                        help_text="How this state was created",
                        max_length=20,
                    ),
                ),
                (
                    "strategy_id",
                    models.PositiveIntegerField(
                        help_text="ID стратегии на момент расчета"
                    ),
                ),
                (
                    "universe_symbols",
                    models.JSONField(
                        help_text="Упорядоченный список символов стратегии"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "exchange_account",
                    models.OneToOneField(
                        help_text="Exchange account this state belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="portfolio_state",
                        to="exchanges.exchangeaccount",
                    ),
                ),
            ],
            options={
                "verbose_name": "Portfolio State",
                "verbose_name_plural": "Portfolio States",
                "ordering": ["-updated_at"],
                "indexes": [
                    models.Index(
                        fields=["exchange_account", "-updated_at"],
                        name="pstate_account_updated",
                    ),
                    models.Index(
                        fields=["strategy_id", "-updated_at"],
                        name="pstate_strategy_updated",
                    ),
                ],
                "constraints": [
                    models.UniqueConstraint(
                        fields=("exchange_account",), name="unique_state_per_connector"
                    )
                ],
            },
        ),
    ]
