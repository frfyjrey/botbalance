[project]
name = "botbalance-backend"
version = "0.1.0"
description = "Django + DRF + Celery botbalance backend"
requires-python = ">=3.11"
dependencies = [
    "django>=5.0.0",
    "djangorestframework>=3.14.0",
    "djangorestframework-simplejwt>=5.3.0",
    "django-cors-headers>=4.3.0",
    "celery>=5.3.0",
    "redis>=5.0.0",
    "psycopg2-binary>=2.9.0",
    "python-dotenv>=1.0.0",
    "gunicorn>=21.2.0",
    "whitenoise>=6.6.0",
    "python-json-logger>=3.3.0",
    "httpx>=0.27.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-django>=4.7.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "factory-boy>=3.3.0",
    "ruff>=0.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.7.0",
    "django-stubs>=4.2.0",
    "types-redis>=4.6.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["botbalance"]

[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "B904",  # raise ... from err (not always needed in tests)
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"*/migrations/*" = ["E501"]
"*/settings/*" = [
    "F403",  # star imports (normal in Django settings)
    "F405",  # may be undefined from star imports (normal in Django settings)
    "E402",  # module level import not at top (normal in Django settings)
]
"tests/*" = [
    "B011",  # assert False (acceptable in tests)
    "B904",  # raise ... from err (not always needed in tests)
]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | migrations
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_django = "django"
known_first_party = "botbalance"
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "DJANGO", "FIRSTPARTY", "LOCALFOLDER"]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
plugins = ["mypy_django_plugin.main"]

# Django settings files have special patterns that mypy doesn't understand well
[[tool.mypy.overrides]]
module = [
    "botbalance.settings.*",
]
ignore_errors = true

[tool.django-stubs]
django_settings_module = "botbalance.settings.local"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "botbalance.settings.local"
addopts = "-v --tb=short --strict-markers"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[dependency-groups]
dev = [
    "factory-boy>=3.3.3",
    "pytest>=8.4.1",
    "pytest-django>=4.11.1",
    "pytest-mock>=3.14.1",
    "pytest-cov>=4.1.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "django-stubs>=4.2.0",
    "types-redis>=4.6.0",
    "requests>=2.32.5",
    "types-requests>=2.32.4.20250809",
]
