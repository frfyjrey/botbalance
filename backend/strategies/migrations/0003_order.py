# Generated by Django 5.2.5 on 2025-09-03 12:37

from decimal import Decimal

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("strategies", "0002_add_order_step_pct"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "exchange_order_id",
                    models.CharField(
                        blank=True,
                        help_text="Exchange-specific order ID (set after submission)",
                        max_length=100,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "client_order_id",
                    models.CharField(
                        help_text="Client-side order ID for idempotency",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "exchange",
                    models.CharField(
                        default="binance",
                        help_text="Exchange where order was placed",
                        max_length=20,
                    ),
                ),
                (
                    "symbol",
                    models.CharField(
                        help_text="Trading pair symbol (e.g., 'BTCUSDT')", max_length=20
                    ),
                ),
                (
                    "side",
                    models.CharField(
                        choices=[("buy", "Buy"), ("sell", "Sell")],
                        help_text="Order side - buy or sell",
                        max_length=4,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("submitted", "Submitted"),
                            ("open", "Open"),
                            ("filled", "Filled"),
                            ("cancelled", "Cancelled"),
                            ("rejected", "Rejected"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        help_text="Current order status",
                        max_length=10,
                    ),
                ),
                (
                    "limit_price",
                    models.DecimalField(
                        decimal_places=8,
                        help_text="Limit price for the order",
                        max_digits=20,
                    ),
                ),
                (
                    "quote_amount",
                    models.DecimalField(
                        decimal_places=8,
                        help_text="Order amount in quote currency (USDT, etc.)",
                        max_digits=20,
                    ),
                ),
                (
                    "filled_amount",
                    models.DecimalField(
                        decimal_places=8,
                        default=Decimal("0E-8"),
                        help_text="Actually filled amount in quote currency",
                        max_digits=20,
                    ),
                ),
                (
                    "fee_amount",
                    models.DecimalField(
                        decimal_places=8,
                        default=Decimal("0E-8"),
                        help_text="Trading fees paid",
                        max_digits=20,
                    ),
                ),
                (
                    "fee_asset",
                    models.CharField(
                        blank=True,
                        help_text="Asset used for fee payment (e.g., 'BNB', 'USDT')",
                        max_length=10,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="When order was created in our system",
                    ),
                ),
                (
                    "submitted_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When order was submitted to exchange",
                        null=True,
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, help_text="Last time order status was updated"
                    ),
                ),
                (
                    "filled_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When order was completely filled",
                        null=True,
                    ),
                ),
                (
                    "error_message",
                    models.TextField(
                        blank=True, help_text="Error message if order failed"
                    ),
                ),
                (
                    "exchange_data",
                    models.JSONField(
                        blank=True,
                        help_text="Raw exchange response data for debugging",
                        null=True,
                    ),
                ),
                (
                    "execution",
                    models.ForeignKey(
                        blank=True,
                        help_text="Rebalance execution this order belongs to (if any)",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="orders",
                        to="strategies.rebalanceexecution",
                    ),
                ),
                (
                    "strategy",
                    models.ForeignKey(
                        help_text="Strategy this order belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="orders",
                        to="strategies.strategy",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="User who owns this order",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="orders",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Order",
                "verbose_name_plural": "Orders",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["user", "-created_at"], name="orders_user_created"
                    ),
                    models.Index(
                        fields=["strategy", "-created_at"],
                        name="orders_strategy_created",
                    ),
                    models.Index(
                        fields=["status", "-created_at"], name="orders_status_created"
                    ),
                    models.Index(
                        fields=["exchange_order_id"], name="orders_exchange_id"
                    ),
                    models.Index(fields=["client_order_id"], name="orders_client_id"),
                ],
            },
        ),
    ]
